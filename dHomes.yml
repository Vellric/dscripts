dHomes:
    type: command
    name: dhome
    aliases:
    - dhomes
    - home
    - h
    - dh
    script:
    - choose "<c.args.get[1]>":
      - case null:
        - narrate "<&a>###### dHome ######"
        - narrate "<&c>Usage: /<c.alias> <&lt>new/tp/list/remove<&gt>"
      - case new:
        - if <c.args.get[2].trim.length||0> == 0 {
          - narrate "<&c>[dHomes] Please specify the name of the home you want to create."
          - queue clear
        }
        - if !<server.has_file[/dHomes/<pl.uuid>.yml]> {
            - yaml create id:/dHomes/<pl.uuid>_dHomes
            - yaml savefile:/dHomes/<pl.uuid>.yml id:<pl.uuid>_dHomes
            - yaml load:<pl.uuid>.yml id:<pl.uuid>
        }
        - yaml id:<pl.uuid>_dHomes set <c.args.get[2]>:<player.location>
        - narrate "<&d>[dHomes] Your new home '<&r><&b><c.args.get[2]><&r><&d>' has been created. You can now do '/<context.alias> tp <c.args.get[2]>'."
      - case tp:
        - if <c.args.get[2].trim.length||0> == 0 {
          - narrate "<&c>[dHomes] Please specify the name of the home where you want to teleport."
          - queue clear
        }
        - teleport <player> <yaml[<pl.uuid>_dHomes].read[<c.args.get[2]>]>
        - narrate "<&d>[dHomes] Welcome home! You have been teleported to your home <&b>'<c.args.get[2]>'<&d>."
      - case remove:
        - if <c.args.get[2].trim.length||0> == 0 {
          - narrate "<&c>[dHomes] Please specify the name of the home you want to remove."
          - queue clear
        }
        - if !<server.has_file[/dHomes/<pl.uuid>.yml]> {
          - "<&c>[dHomes] Sorry, you don't have any home to delete right now. You can create one with '/<c.alias> new'."
          - queue clear
        }
        - if <yaml[<pl.uuid>_dHomes].contains[<c.args.get[2]>].not> {
          - narrate "<&c>[dHomes] Sorry, you don't have any home named '<&b><c.args.get[2]><&d>'."
          - queue clear
        }
        - yaml id:<pl.uuid>_dHomes set <c.args.get[2]>:!
        - narrate "<&d>[dHomes] Your home named '<&b><c.args.get[2]><&d>' has been deleted. You can create a new one with '/<c.alias> new'."
      - case list:
        - if !<server.has_fille[/dHomes/<pl.uuid>.yml]> {
          - narrate "<&c>[dHomes] Sorry, you don't have any home to list right now. You can create one with '/<c.alias> new'."
          - queue clear
        }
        - if <yaml[<pl.uuid>_dHomes].list_keys[].size||0> == 0 {
          - narrate "<&c>[dHomes] Sorry, you don't have any home to list right now. You can create one with '/<c.alias> new'." 
          - queue clear
        }
        - narrate "<&a>###### dHomes List ######"
        - foreach <yaml[<pl.uuid>_dHomes].list_keys[]> {
          - narrate "<&e>- [%loop_index] %value%"
        }
dHomes_events:
    type: world
    events:
      on server start:
      - foreach <server.list_files[/dHomes]> {
        - yaml load:%value%.yml id:<pl.uuid>_dHomes
      }
